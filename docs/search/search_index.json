{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GOFF test Inspired from Kostis Kapelonis (Codefresh.io) talk at the KubeCon about How to Preview and Diff Your Argo CD Deployments we relased our own GitOps Diff tool (Goff). This tool helps you to preview your changes in your GitOps Repository. How it works Example for ArgoCD Application diff #Render all ArgoCD manifests in directory from source branch goff argocd app \"./source/argocd\" --repo-server=\"repo-server:8081\" --output-dir=/tmp/source/ #Render all ArgoCD manifests in directory from target branch goff argocd app \"./target/argocd\" --repo-server=\"repo-server:8081\" --output-dir=/tmp/target/ #Diff rendered Kubernetes manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir . Setup your pipeline in your GitOps repository. You can find examples integrations for Github, Gitlab and Gitea here Create a new branch and commit your changes in your ArgoCd Application Run your pipeline, Goff renders the Appication into manifests calculate the diff between the source and target branch. Check the auto generated comment in your Pull request and review the changes Installation You can download the latest release here Or you can use the pre built Docker image docker pull quay.io/puzzle/goff:test The image includes following tools: goff test Gitlab CLI Gitea CLI Helm Git Usage GitOps Diff Tool Usage: goff [command] Available Commands: argocd Render manifests from ArgoCD resources completion Generate the autocompletion script for the specified shell diff Diff files [sourceDir] [targetDir] help Help about any command kustomize Generate a DOT file to visualize the dependencies between your kustomize components split Split manifests [manifestFile] Flags: -h, --help help for goff -l, --logLevel string Set loglevel [debug, info, error] (default \"error\") Use \"goff [command] --help\" for more information about a command. Supported Tools Tooling Support Plain manifests \u2705 Helm \u2705 Supported through plain manifests Kustomize \u2705 ArgoCD Application \u2705 Needs a local ArgoCD Repo server instance ArgoCD ApplicationSet \ud83d\udea7 Not yet fully supported (List generators only)","title":"Home"},{"location":"#goff-test","text":"Inspired from Kostis Kapelonis (Codefresh.io) talk at the KubeCon about How to Preview and Diff Your Argo CD Deployments we relased our own GitOps Diff tool (Goff). This tool helps you to preview your changes in your GitOps Repository.","title":"GOFF test"},{"location":"#how-it-works","text":"Example for ArgoCD Application diff #Render all ArgoCD manifests in directory from source branch goff argocd app \"./source/argocd\" --repo-server=\"repo-server:8081\" --output-dir=/tmp/source/ #Render all ArgoCD manifests in directory from target branch goff argocd app \"./target/argocd\" --repo-server=\"repo-server:8081\" --output-dir=/tmp/target/ #Diff rendered Kubernetes manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir . Setup your pipeline in your GitOps repository. You can find examples integrations for Github, Gitlab and Gitea here Create a new branch and commit your changes in your ArgoCd Application Run your pipeline, Goff renders the Appication into manifests calculate the diff between the source and target branch. Check the auto generated comment in your Pull request and review the changes","title":"How it works"},{"location":"#installation","text":"You can download the latest release here Or you can use the pre built Docker image docker pull quay.io/puzzle/goff:test The image includes following tools: goff test Gitlab CLI Gitea CLI Helm Git","title":"Installation"},{"location":"#usage","text":"GitOps Diff Tool Usage: goff [command] Available Commands: argocd Render manifests from ArgoCD resources completion Generate the autocompletion script for the specified shell diff Diff files [sourceDir] [targetDir] help Help about any command kustomize Generate a DOT file to visualize the dependencies between your kustomize components split Split manifests [manifestFile] Flags: -h, --help help for goff -l, --logLevel string Set loglevel [debug, info, error] (default \"error\") Use \"goff [command] --help\" for more information about a command.","title":"Usage"},{"location":"#supported-tools","text":"Tooling Support Plain manifests \u2705 Helm \u2705 Supported through plain manifests Kustomize \u2705 ArgoCD Application \u2705 Needs a local ArgoCD Repo server instance ArgoCD ApplicationSet \ud83d\udea7 Not yet fully supported (List generators only)","title":"Supported Tools"},{"location":"build/","text":"Build Build binary from source go build -o goff goff Build Image with dagger go run ci/main.go or dagger run go run ci/main.go","title":"Build"},{"location":"build/#build","text":"","title":"Build"},{"location":"build/#build-binary-from-source","text":"go build -o goff goff","title":"Build binary from source"},{"location":"build/#build-image-with-dagger","text":"go run ci/main.go or dagger run go run ci/main.go","title":"Build Image with dagger"},{"location":"examples/","text":"Examples Helm #Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Render source chart helm template mychart ./source/helm/mychart --output-dir /tmp/source/out #Render target Chart helm template mychart ./target/helm/mychart --output-dir /tmp/target/out #Diff rendered manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir . Kustomize Example for Kustomization diff #Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Build base and all overlays from source branch goff kustomize build ./source/kustomize --output-dir /tmp/source/out #Build base and all overlays from target branch goff kustomize build ./target/kustomize --output-dir /tmp/target/out #Diff rendered manifests goff diff \"/tmp/source\" \"/tmp/target\" --title=Preview --output-dir . ArgoCD goff argocd -h Render manifests from ArgoCD resources Usage: goff argocd [flags] goff argocd [command] Available Commands: app Render manifests from ArgoCD Application appset Render ArgoCD Applications manifests from ApplicationSets Flags: -h, --help help for argocd -o, --output-dir string Output directory (default \".\") -p, --password string Repo password -i, --ssh-key string Repo SSH Key -u, --username string Repo username Global Flags: -l, --log-level string Set loglevel [debug, info, error] (default \"error\") Use \"goff argocd [command] --help\" for more information about a command. ArgoCD Application Example for ArgoCD Application diff #Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Start ArgoCD repo server to render Applications docker run -d -p 8081:8081 quay.io/argoproj/argocd:latest #Render all ArgoCD manifests in directory from source branch goff argocd app \"./source/argocd/app\" --repo-server=\"localhost:8081\" --output-dir=/tmp/source/ #Render all ArgoCD manifests in directory from target branch goff argocd app \"./target/argocd/app\" --repo-server=\"localhost:8081\" --output-dir=/tmp/target/ #Diff rendered Kubernetes manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir . ArgoCD ApplicationSet Example for ArgoCD ApplicationSet diff #Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Render all ArgoCD manifests in directory from source branch goff argocd appset \"./source/argocd/app-set\" --repo-server=\"localhost:8081\" --output-dir=/tmp/source/ #Render all ArgoCD manifests in directory from target branch goff argocd appset \"./target/argocd/app-set\" --repo-server=\"localhost:8081\" --output-dir=/tmp/target/ #Diff rendered Kubernetes manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir .","title":"Examples"},{"location":"examples/#examples","text":"","title":"Examples"},{"location":"examples/#helm","text":"#Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Render source chart helm template mychart ./source/helm/mychart --output-dir /tmp/source/out #Render target Chart helm template mychart ./target/helm/mychart --output-dir /tmp/target/out #Diff rendered manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir .","title":"Helm"},{"location":"examples/#kustomize","text":"Example for Kustomization diff #Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Build base and all overlays from source branch goff kustomize build ./source/kustomize --output-dir /tmp/source/out #Build base and all overlays from target branch goff kustomize build ./target/kustomize --output-dir /tmp/target/out #Diff rendered manifests goff diff \"/tmp/source\" \"/tmp/target\" --title=Preview --output-dir .","title":"Kustomize"},{"location":"examples/#argocd","text":"goff argocd -h Render manifests from ArgoCD resources Usage: goff argocd [flags] goff argocd [command] Available Commands: app Render manifests from ArgoCD Application appset Render ArgoCD Applications manifests from ApplicationSets Flags: -h, --help help for argocd -o, --output-dir string Output directory (default \".\") -p, --password string Repo password -i, --ssh-key string Repo SSH Key -u, --username string Repo username Global Flags: -l, --log-level string Set loglevel [debug, info, error] (default \"error\") Use \"goff argocd [command] --help\" for more information about a command.","title":"ArgoCD"},{"location":"examples/#argocd-application","text":"Example for ArgoCD Application diff #Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Start ArgoCD repo server to render Applications docker run -d -p 8081:8081 quay.io/argoproj/argocd:latest #Render all ArgoCD manifests in directory from source branch goff argocd app \"./source/argocd/app\" --repo-server=\"localhost:8081\" --output-dir=/tmp/source/ #Render all ArgoCD manifests in directory from target branch goff argocd app \"./target/argocd/app\" --repo-server=\"localhost:8081\" --output-dir=/tmp/target/ #Diff rendered Kubernetes manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir .","title":"ArgoCD Application"},{"location":"examples/#argocd-applicationset","text":"Example for ArgoCD ApplicationSet diff #Clone source branch git clone --branch feature/A git@github.com:schlapzz/goff-github.git ./source/ #Clone target branch git clone --branch main git@github.com:schlapzz/goff-github.git ./target/ #Render all ArgoCD manifests in directory from source branch goff argocd appset \"./source/argocd/app-set\" --repo-server=\"localhost:8081\" --output-dir=/tmp/source/ #Render all ArgoCD manifests in directory from target branch goff argocd appset \"./target/argocd/app-set\" --repo-server=\"localhost:8081\" --output-dir=/tmp/target/ #Diff rendered Kubernetes manifests goff diff \"/tmp/source\" \"/tmp/target\" --output-dir .","title":"ArgoCD ApplicationSet"},{"location":"integrations/","text":"Integrations Github on: pull_request: types: [opened, synchronize] paths: - \"argocd/**\" permissions: contents: read pull-requests: write name: Diff GitOps Environments jobs: diff-env-argo: # The type of runner that the job will run on runs-on: ubuntu-latest services: reposerver: image: quay.io/puzzle/argocd-repo-server:latest ports: - \"8081:8081\" options: >- --health-cmd \"nc -z localhost 8081\" --health-interval 10s --health-timeout 5s --health-retries 5 container: image: quay.io/puzzle/goff:latest steps: - name: Checkout PR uses: actions/checkout@v3 with: path: source - name: Checkout Target of PR uses: actions/checkout@v3 with: path: target ref: ${{ github.event.pull_request.base.ref }} - run: | goff argocd app \"./source/argocd\" --repo-server=\"reposerver:8081\" --output-dir=/tmp/source/ goff argocd app \"./target/argocd\" --repo-server=\"reposerver:8081\" --output-dir=/tmp/target/ goff diff \"/tmp/source\" \"/tmp/target\" --output-dir . - name: comment PR uses: machine-learning-apps/pr-comment@master env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} with: path: diff.md Gitlab stages: - merge create_comment: stage: merge image: quay.io/puzzle/goff:latest script: - echo \"Target branch $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME\" - git clone -b $CI_MERGE_REQUEST_TARGET_BRANCH_NAME --single-branch $CI_REPOSITORY_URL /tmp/checkout/target - mkdir -p /tmp/source - mkdir -p /tmp/target - cd kustomize - goff kustomize build . --output-dir=/tmp/out/source - cd /tmp/checkout/target/kustomize - goff kustomize build . --output-dir=/tmp/out/target - goff diff \"/tmp/out/source\" \"/tmp/out/target\" --output-dir /tmp/ - glab auth login --hostname gitlab.puzzle.ch -t $GITLAB_ACCESS_TOKEN - glab mr note -m \"$(cat /tmp/diff.md)\" $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME rules: - if: $CI_PIPELINE_SOURCE == 'merge_request_event' changes: - kustomize/**/* Gitea","title":"Integrations"},{"location":"integrations/#integrations","text":"","title":"Integrations"},{"location":"integrations/#github","text":"on: pull_request: types: [opened, synchronize] paths: - \"argocd/**\" permissions: contents: read pull-requests: write name: Diff GitOps Environments jobs: diff-env-argo: # The type of runner that the job will run on runs-on: ubuntu-latest services: reposerver: image: quay.io/puzzle/argocd-repo-server:latest ports: - \"8081:8081\" options: >- --health-cmd \"nc -z localhost 8081\" --health-interval 10s --health-timeout 5s --health-retries 5 container: image: quay.io/puzzle/goff:latest steps: - name: Checkout PR uses: actions/checkout@v3 with: path: source - name: Checkout Target of PR uses: actions/checkout@v3 with: path: target ref: ${{ github.event.pull_request.base.ref }} - run: | goff argocd app \"./source/argocd\" --repo-server=\"reposerver:8081\" --output-dir=/tmp/source/ goff argocd app \"./target/argocd\" --repo-server=\"reposerver:8081\" --output-dir=/tmp/target/ goff diff \"/tmp/source\" \"/tmp/target\" --output-dir . - name: comment PR uses: machine-learning-apps/pr-comment@master env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} with: path: diff.md","title":"Github"},{"location":"integrations/#gitlab","text":"stages: - merge create_comment: stage: merge image: quay.io/puzzle/goff:latest script: - echo \"Target branch $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME\" - git clone -b $CI_MERGE_REQUEST_TARGET_BRANCH_NAME --single-branch $CI_REPOSITORY_URL /tmp/checkout/target - mkdir -p /tmp/source - mkdir -p /tmp/target - cd kustomize - goff kustomize build . --output-dir=/tmp/out/source - cd /tmp/checkout/target/kustomize - goff kustomize build . --output-dir=/tmp/out/target - goff diff \"/tmp/out/source\" \"/tmp/out/target\" --output-dir /tmp/ - glab auth login --hostname gitlab.puzzle.ch -t $GITLAB_ACCESS_TOKEN - glab mr note -m \"$(cat /tmp/diff.md)\" $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME rules: - if: $CI_PIPELINE_SOURCE == 'merge_request_event' changes: - kustomize/**/*","title":"Gitlab"},{"location":"integrations/#gitea","text":"","title":"Gitea"}]}